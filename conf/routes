# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                         @controllers.Application.index()

#AR service
GET     /ar                       @controllers.ar.ArController.getAll()
GET     /ar/:id                   @controllers.ar.ArController.get(id: Long)
POST    /ar                       @controllers.ar.ArController.create()
PUT     /ar                       @controllers.ar.ArController.update()
DELETE  /ar/:id                   @controllers.ar.ArController.delete(id: Long)

#AR Version service
#GET     /arversion/active         @controllers.ar.ArVersionController.getAllActive()
GET     /arversion                @controllers.ar.ArVersionController.getAll()
GET     /arversion/:id            @controllers.ar.ArVersionController.get(id: Long)
POST    /arversion                @controllers.ar.ArVersionController.create()
PUT     /arversion                @controllers.ar.ArVersionController.update()
DELETE  /arversion/:id            @controllers.ar.ArVersionController.delete(id: Long)
POST    /arsearch                 @controllers.ar.ArVersionController.arSmellSearch()
POST    /arsearchcount            @controllers.ar.ArVersionController.arSmellSearchCount()
GET     /arversion/pdf/:id        @controllers.ar.ArVersionController.getPDF(id: Long)


#ModelElement service
GET     /modelelement/type        @controllers.ar.element.ModelElementController.getModelElementLinkType()
GET     /modelelement/qas         @controllers.ar.element.ModelElementController.getQASElements()
GET     /modelelement/components  @controllers.ar.element.ModelElementController.getComponentElements()
GET     /modelelement/context     @controllers.ar.element.ModelElementController.getContextElements()
GET     /modelelement/decisions   @controllers.ar.element.ModelElementController.getDecisionElements()
GET     /modelelement/references  @controllers.ar.element.ModelElementController.getReferenceElements()
GET     /modelelement             @controllers.ar.element.ModelElementController.getAll()
GET     /modelelement/:id         @controllers.ar.element.ModelElementController.get(id: Long)
POST    /modelelement             @controllers.ar.element.ModelElementController.create()
PUT     /modelelement             @controllers.ar.element.ModelElementController.update()
DELETE  /modelelement/:id         @controllers.ar.element.ModelElementController.delete(id: Long)

#Smell service
GET     /smell                    @controllers.smell.SmellController.getAll()
GET     /smell/forcloud           @controllers.smell.SmellController.getCloudSmells()
GET     /smell/:id                @controllers.smell.SmellController.get(id: Long)
POST    /smell                    @controllers.smell.SmellController.create()
PUT     /smell                    @controllers.smell.SmellController.update()
DELETE  /smell/:id                @controllers.smell.SmellController.delete(id: Long)
GET     /smell/pdf/:id 		      @controllers.smell.SmellController.getPDF(id: Long)

#SmellGroup service
GET     /smellgroup               @controllers.smell.SmellGroupController.getAll()
GET     /smellgroup/:id           @controllers.smell.SmellGroupController.get(id: Long)
POST    /smellgroup               @controllers.smell.SmellGroupController.create()
PUT     /smellgroup               @controllers.smell.SmellGroupController.update()
DELETE  /smellgroup/:id           @controllers.smell.SmellGroupController.delete(id: Long)

#Discussion service
GET     /discussion               @controllers.discussion.DiscussionController.getAll()
GET     /discussion/:id           @controllers.discussion.DiscussionController.get(id: Long)
POST    /discussion               @controllers.discussion.DiscussionController.create()
PUT     /discussion               @controllers.discussion.DiscussionController.update()
DELETE  /discussion/:id           @controllers.discussion.DiscussionController.delete(id: Long)

#Comment service
GET     /comment                  @controllers.discussion.CommentController.getAll()
GET     /comment/:id              @controllers.discussion.CommentController.get(id: Long)
PUT     /like/:id                 @controllers.discussion.LikeController.like(id: Long)
POST    /comment                  @controllers.discussion.CommentController.create()
PUT     /comment                  @controllers.discussion.CommentController.update()
DELETE  /comment/:id              @controllers.discussion.CommentController.delete(id: Long)

#Property service
GET     /property                 @controllers.property.PropertyController.getAll()
GET     /property/categorie/:cat  @controllers.property.PropertyController.getCategorie(cat: String)
GET     /property/:id             @controllers.property.PropertyController.get(id: Long)
POST    /property                 @controllers.property.PropertyController.create()
PUT     /property                 @controllers.property.PropertyController.update()
DELETE  /property/:id             @controllers.property.PropertyController.delete(id: Long)

#Menu service
GET     /menu	                  @controllers.menu.MenuController.getAll()
GET     /menu/:id                 @controllers.menu.MenuController.get(id: Long)
POST    /menu                     @controllers.menu.MenuController.create()
PUT     /menu                     @controllers.menu.MenuController.update()
DELETE  /menu/:id                 @controllers.menu.MenuController.delete(id: Long)

#User service
GET     /user	                  @controllers.user.UserController.getAll()
GET     /user/:id                 @controllers.user.UserController.get(id: Long)
POST    /user                     @controllers.user.UserController.create()
PUT     /user                     @controllers.user.UserController.update()
DELETE  /user/:id                 @controllers.user.UserController.delete(id: Long)
PUT     /changepw  	              @controllers.user.UserController.changePassword()
PUT     /login  	              @controllers.user.UserController.login()
GET     /logout  	              @controllers.user.UserController.logout()
GET     /userroles	              @controllers.user.RoleController.getAll()
POST    /avatar                   @controllers.user.UserController.uploadAvatar()
GET     /avatar/:id	              @controllers.user.UserController.getAvatar(id: Long)

#User Searches
GET     /usersearch               @controllers.ar.ArSearchController.getUserSearches()
POST    /usersearch               @controllers.ar.ArSearchController.create()
DELETE  /usersearch/:id           @controllers.ar.ArSearchController.delete(id: Long)

#TaskTemplate service
GET     /task                     @controllers.task.TaskTemplateController.getAll()
GET     /task/:id                 @controllers.task.TaskTemplateController.get(id: Long)
POST    /task                     @controllers.task.TaskTemplateController.create()
PUT     /task                     @controllers.task.TaskTemplateController.update()
DELETE  /task/:id                 @controllers.task.TaskTemplateController.delete(id: Long)
GET     /task/pdf/:id 		      @controllers.task.TaskTemplateController.getPDF(id: Long)

#TaskProperty service
GET     /taskproperty             @controllers.task.TaskPropertyController.getAll()
GET     /taskproperty/:id         @controllers.task.TaskPropertyController.get(id: Long)
POST    /taskproperty             @controllers.task.TaskPropertyController.create()
PUT     /taskproperty             @controllers.task.TaskPropertyController.update()
DELETE  /taskproperty/:id         @controllers.task.TaskPropertyController.delete(id: Long)

#ExecTaskType service
GET     /exectasktype             @controllers.task.ExecTaskTypeController.getAll()
GET     /exectasktype/empty       @controllers.task.ExecTaskTypeController.getEmptyExecTaskType()
GET     /exectasktype/:id         @controllers.task.ExecTaskTypeController.get(id: Long)
POST    /exectasktype             @controllers.task.ExecTaskTypeController.create()
PUT     /exectasktype             @controllers.task.ExecTaskTypeController.update()
DELETE  /exectasktype/:id         @controllers.task.ExecTaskTypeController.delete(id: Long)

#Status service
GET     /status                   @controllers.status.StatusController.get()

#Statistic service
GET     /stats                    @controllers.statistic.StatisticController.get()

# Map static resources from the /public folder to the /assets URL path
GET     /*file                     controllers.Assets.at(path="/public", file)
