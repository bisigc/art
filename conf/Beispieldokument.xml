<?xml version="1.0" encoding="UTF-8"?>
<article xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="Schema\docbook.xsd">
	<title>Word 2003 und XML</title>
	<section id="Einleitung">
		<title>Einleitung</title>
		<para >Word 2003 - für viele Benutzer ist dies sicher nur ein normales Update
wie viele Updates vorher auch schon. Für andere ist diese Version jedoch
Ausdruck eines Paradigmen-Wechsels bei Microsoft. Warum? Waren bislang
die Office-Produkte Inbegriff von proprietärer Technik, macht Microsoft
nun die interne Datenstruktur mit einer gut dokumentierten und
auf Standards basierenden <link linkend="Elemente">XML-Struktur</link> jedermann zugänglich. Dadurch
öffnen sich die Office-Dokumente der elektronischen Weiterverarbeitung
und reduzieren die Abhängigkeit vom Orginialprogramm.
Genauso einfach ist es möglich, bestehenden XML-Inhalt mit Hilfe eines
Stylesheets in eine Word-Datei zu überführen, in der der Inhalt anschließend
angesehen, editiert und gespeichert werden kann. Mehr noch: Erstmalig
erlaubt es Word, das Dateien eine durch das Programm überprüfbare
Struktur erhalten. Dies werden vor allem Verlage und Unternehmen
schätzen, deren technische Dokumentation, Buchprojekte oder Vertragstexte
bislang von unterschiedlichen Editoren in relativer gestalterischer
Freiheit in Word erstellt wurden.</para>
		<para>Dieses Buch führt in die Unterstützung von XML in Office ein. Es
zeigt auf, wie die neue Technologie zu nutzen ist und welche Szenarien
sich daraus ergeben. Es führt ein in das Schema zu WordML, auf dem die
XML-Dateien, die aus Word erzeugt werden, basieren und zeigt Möglichkeiten
des effizienten Umgangs mit diesen Dateien auf. Ebenso werden
neue Technologien, die auf der XML-Unterstützung basieren oder eng mit
ihr zusammen arbeiten, dargestellt, wie z.B. die SmartDocument Solution
oder die Visual Studio Tools for Office. Ziel dieses Buches ist es, dem
ernsthaften Anwender und dem Programmierer eine Quelle an die Hand
zu geben, um erfolgreich XML in Word für sich nutzen zu können. Eine
Referenz über WordML schließt das Buch ab.</para>
		<section>
			<title>An wen richtet sich dieses Buch?</title>
			<para>Dieses Buch wurde für Entscheider, Entwickler und ernsthafte Anwender
geschrieben, die sich mit den neuen Möglichkeiten von XML in Word
vertraut machen wollen. Entscheidern erläutert dieses Buch die Prinzipien,
aber auch die Grenzen dieser Technologie und unterstützt so die strategische Planung für die Integration dieser Technik in eigene Projekte.</para>
			<para>
Programmierer profitieren von der kommentierten Referenz zu WordML
ebenso wie die kritische Besprechung der neuen Programmierparadigmen
wie den SmartDocument Solutions. Dies macht das Buch zu einem ständigen
Begleiter bei der Entwicklung eigener Anwendungen, die XML
integrieren. Dem ernsthaften Anwender eröffnet sich durch die einfache
Erstellung von Word-Dokumenten mit Untesrtützung von XML, aber
auch die Erweiterung der Makro-Programmierung um die SmartDocuments
einen Weg, bestehende Lösungen zu erweitern und durch die
Integration offener Standards effizienter zu machen.</para>
			<para>
Für den normalen Anwender ist die XML-Unterstützung im Regelfall
weniger wichtig, da sie auf einer Ebene unterhalb des normalen Umgangs
mit Word angesiedelt ist. Die Unterstützung von XML ist möglicherweise
auch für Anwender und Entwickler, die bereits in der Vergangenheit ausschließlich
mit Office Produkten gearbeitet haben, ein Randthema, obwohl
auch hier z.B. durch die Integration von XML-basierten WebServices
oder die Möglichkeit, eigenen XML-Inhalt ohne die Formatierungsangaben
aus Word exportieren zu können, neue Anwendungsfelder
eröffnet werden können.</para>
		</section>
		<section>
			<title>Aufbau des Buches</title>
			<para>	Das Buch beginnt mit einer Einführung in die neuen Fähigkeiten von XML
in Word und .....</para>
			<para>
Ein eigenes Kapitel ist den Themen SmartDocuments und Visual Studio
Tools for Office (VSTO) gewidmet. SmartDocuments sind eine neue
Vision, die erst mit den Möglichkeiten von XML in Word möglich wurden.
SmartDocuments versprechen eine Kontext-bezogene Palette von
Hilfsmitteln und Steuerelementen, mit deren Hilfe bislang nicht mögliche
Benutzerführungskonzepte in Word umgesetzt werden können. Anhand
eines Beispielprojekts wird die Arbeitsweise erläutert und Möglichkeiten
und Grenzen der Technologie aufgezeigt. Die Zukunft der Anwendungsentwicklung
mit Office stellen die Visual Studio Tools for Office (VSTO)
dar, die das seit Einführung von Word bekannte, auf VBA basierende
Programmiermodell durch managed Code des .NET-Frameworks ersetzt
und bislang nicht gekannte Professionalität in der Programmierung von
Word ermöglicht.</para>
		</section>
	</section>
	<section>
		<title>Erstellen und Bearbeiten von
XML-Dokumenten mit Word 2003</title>
		<para>
In diesem Kapitel soll gezeigt werden, wie mit XML-Dokumenten in
Word 2003 gearbeitet werden kann. Auf WordML-Dokumente wird im
folgenden nicht eingegangen, da Word sie nicht als XML-Dokumente
sondern als native Word-Dokumente behandelt.</para>
		<para>
WordML ist das neue Speicherformat von Word 2003 und kann als
Alternative zu dem doc-Format betrachtet werden. Der Aufbau und die
Funktionsweise werden im folgenden Kapitel näher beleuchtet.</para>
		<section>
			<title>Das Arbeiten mit Schemas</title>
			<para>Schemas legen das Vokabular von Elementen und Attributen fest, das für
ein XML-Dokument benutzt werden darf. Das Schema regelt das Vorkommen
und die Verwendungsweise der entsprechenden Auszeichnungselemente
und -attribute. Neben der Festlegung welche Elemente bzw.
Attribute überhaupt verwendet werden dürfen, lassen sich zahlreiche weitere
Regeln über die Verwendungsweise aufstellen. So lassen sich beispielsweise
Angaben treffen, wie oft und in welcher Reihenfolge Elemente
auftreten dürfen.</para>
			<para>
Word 2003 benutzt Schemas in zweifacher Weise. Einerseits überprüft
Word die Gültigkeit des gesamten XML-Dokumentes in Bezug auf
das ihm zugrundeliegende Schema und andererseits wird während der
Bearbeitung bereits die Struktur des Dokuments abgebildet und damit
auch die Möglichkeiten zu dessen Bearbeitung festgelegt.
Schemas müssen in der vom W3Consortium entwickelten Definitionssprache
für XML-Schemas verfasst sein (XSD). Man kann Schemas
selbst erstellen, jedoch bietet Word keinen speziellen Editor zur Verfügung
mit dessen Hilfe, dies einfach zu bewerkstelligen wäre. Will man ein Schema
selbst entwickeln bleibt einem letzendlich nur der Griff zu einem
speziellen Tool, oder man verwendet einen Texteditor. Ein empfehlenswertes
Tool wäre bespielsweise der <emphasis role="underline">XML-Spy von der Firma Altova</emphasis>, der
auch für die Bearbeitung von XML-Dokumenten und für die Entwicklung
von XSLT-Stylesheets verwendet werden kann.<footnote>
					<para>Eine kostenlose aber eingeschränkte Version (Home Edition) finden Sie unter
<ulink url="http://www.altova.com">www.altova.com</ulink>.	</para>
				</footnote>
			</para>
			<para>Der Aufbau dieser Struktur ist denkbar einfach. Es gibt ein Wurzelelement
<emphasis role="bold">&lt;EUROPA&gt;</emphasis>, das beliebig viele <emphasis role="bold">&lt;LAND&gt;</emphasis>-Elemente enthalten darf. Jedes Land
muss in dieser Reihenfolge genau jeweils ein Element &lt;NAME&gt;, &lt;EINWOHNERZAHL&gt;,
<emphasis role="bold">&lt;HAUPTSTADT&gt;</emphasis>, <emphasis role="bold">&lt;KFZ-KENNZEICHEN&gt;</emphasis> und <emphasis role="bold">&lt;TEL-VORWAHL&gt;</emphasis> enthalten.
Das Element <emphasis role="bold">&lt;EINWOHNERZAHL&gt;</emphasis> hat zudem ein Attribut <emphasis role="italic">EINHEIT</emphasis>, das ebenfalls
verbindlich ist.</para>
			<section>
				<title>Verwendung der Schemabibliothek</title>
				<para>Die Schemabibliothek dient zur Verwaltung und Bearbeitung von Schemas.
Hier lassen sich Schemas hinzufügen, ändern, löschen und Aliasnamen
verwalten. Anders als andere XML-Editoren kann Word 2003 nicht
die Pfadangaben zu hinterlegten Schemas aus den XML-Instanzen verwerten.</para>
				<para>
Alle Schemas, die verwendet werden sollen, müssen in der Schemabibliothek
bekannt gegeben werden. Word erkennt dann beim öffnen
eines XML-Dokumentes anhand des Namensraumes und des Wurzelelementes
automatisch das dazugehörige Schema.</para>
				<para>
Um das Europa-Schema Word 2003 bekannt zu geben, gehen Sie bitte
wie folgt vor:</para>
				<para>
					<orderedlist>
						<listitem>
							<para>Wählen Sie im Menu Extras den Befehl Vorlagen und Add-Ins</para>
						</listitem>
						<listitem>
							<para>Klicken Sie auf die Registerkarte XML-Schema.</para>
							<para>
								<mediaobject>
									<imageobject>
										<imagedata fileref="Abb_3_Kap_4.jpg" width="70mm"/>
									</imageobject>
								</mediaobject>
							</para>
						</listitem>
						<listitem>
							<para>Klicken Sie auf Schema hinzufügen</para>
						</listitem>
						<listitem>
							<para>Aus dem Kontextmenü, das sich nun öffnet, den Unterpunkt Attribute
auswählen.<itemizedlist>
									<listitem>
										<para>Es öffnet sich ein Dialogfeld für das entsprechende Element. Im oberen
Teil werden unter Verfügbare Attribute: die Attribute aufgelistet,
die für das entsprechende Element schemakonform sind.
Darunter befindet sich der Hinweis Typ: der bestimmt welchen Typs
das Attribut sein muß. Z.b string erfordert die Eingabe einer Zeichenkette.
In der Eingabezeile für Wert: muß ein dem Typ entsprechender
zulässiger Wert eingegeben werden.</para>
									</listitem>
									<listitem>
										<para>Im oberen Teil rechts nun auf Hinzufügen klicken, um den eingegebenen
Wert dem Attribut zuzuordnen.</para>
									</listitem>
								</itemizedlist>
							</para>
						</listitem>
					</orderedlist>
				</para>
			</section>
		</section>
	</section>
	<section id="Elemente">
		<title>XSLT-Elemente und
XSLT-Funktionen</title>
		<table ><colgroup>
			<col width="50%"></col><col width="50%"></col>
		</colgroup><thead>
			<tr>
					<td><para>Funktion</para></td>
					<td><para>Beschreibung</para></td>
				</tr>
		</thead><tfoot>
			<tr>
					<td colspan="2"><para><superscript>*</superscript> näheres ein unter <ulink url="http:://www.data2type.de">www.data2type.de</ulink></para></td>
				</tr>
		</tfoot>
			<tbody>
				
				<tr>
					<td rowspan="2"><para>unparsed-entity-uri()</para></td>
					<td><para>Die Funktion unparsed-entity-uri gibt die URI von ungeparsten
Entitäten (z. B. Grafiken) mit dem übergebenen Namen zurück.<superscript>*</superscript></para></td>
				</tr>
				<tr>
					<td><para><emphasis role="bold">Syntax:</emphasis> object unparsed-entity-uri (string)</para></td>
				</tr>
				
			</tbody>
		</table>
	</section>
</article>
