"use strict";angular.module("uiApp",["ui.router","ui.bootstrap","angular-jqcloud","ngResource","ngCookies","ngSanitize","ui.select","ngNotificationsBar","textAngular","ui.sortable"]),angular.module("uiApp").run(["$rootScope","$state","$stateParams","notifications","currentUser","isAllowed","isLoggedin",function(a,b,c,d,e,f,g){a.$state=b,a.$stateParams=c,a.currentUser=e,a.isAllowed=f,a.isLoggedin=g,a.$on("$stateChangeStart",function(a,b,c){var f=b.data.requireLogin,g=b.data.allowedRoles;f&&null==e.profile?(a.preventDefault(),d.showWarning("Login required.")):f&&null!=e.profile&&-1==g.indexOf(e.profile.role.name)&&(a.preventDefault(),d.showWarning("Not enough permissions."))}),a.$on("$stateChangeSuccess",function(a,b,c,d,e){window.document.title="Architectural Refactoring Tool > "+b.title}),a.$on("$stateChangeError",function(a){b.go("root.404")})}]),angular.module("uiApp").config(["notificationsConfigProvider",function(a){a.setAutoHide(!0),a.setHideDelay(7e3),a.setAcceptHTML(!0)}]),angular.module("uiApp").config(["$provide",function(a){var b;if(""==window.activeProfile)b=null;else{var c=atob(window.activeProfile);b="Session timeout"==c?null:angular.fromJson(c)}a.value("currentUser",{profile:b})}]),angular.module("uiApp").config(["$provide",function(a){a.decorator("taOptions",["taSelection","taRegisterTool","$delegate","$window",function(a,b,c,d){return b("hr",{buttontext:"&lt;hr&gt;",tooltiptext:"Insert horizontal line",action:function(){return this.$editor().wrapSelection("inserthtml","<hr>",!0)},activeState:function(a){return a?"hr"===a[0].tagName:!1}}),b("insertAbbreviation",{buttontext:"&lt;abbr&gt;",tooltiptext:"Insert an abbreviation",action:function(){var b=a.getSelection();if(b.collapsed)d.alert("Select abbreviation first.");else if(rangy.getSelection().getRangeAt(0).canSurroundContents()){var c;c=d.prompt("Full wording:","");var e='<abbr title="'+c+'">',f="</abbr>&nbsp;",g=angular.element(e+f)[0];rangy.getSelection().getRangeAt(0).surroundContents(g)}}}),c.forceTextAngularSanitize=!0,c.defaultTagAttributes.a.target="_blank",c.toolbar=[["h1","h2","h3","h4","p","pre","hr","insertAbbreviation"],["bold","italics","underline","ul","ol","redo","undo","clear"],["justifyLeft","justifyCenter","justifyRight","indent","outdent"],["html","insertLink","insertImage","insertVideo"],["wordcount","charcount"]],c}])}]),angular.module("uiApp").config(["$stateProvider","$urlRouterProvider",function(a,b){b.when("","/"),b.otherwise("/"),a.state("root",{url:"",abtract:!0,views:{menu:{templateUrl:_contextPath+"menubar.html",controller:"MenuCtrl"},"login@root":{templateUrl:_contextPath+"login.html",controller:"LoginCtrl"},footer:{templateUrl:_contextPath+"footer.html",controller:"FooterCtrl"}}}).state("root.404",{url:"/404",title:"Page not found",data:{requireLogin:!1},views:{"container@":{templateUrl:_contextPath+"404.html"}}}).state("root.home",{url:"/",title:"Home",data:{requireLogin:!1},views:{"container@":{templateUrl:_contextPath+"home.html"},"statsView@root.home":{templateUrl:_contextPath+"stats.html",controller:"StatsCtrl"},"loginView@root.home":{templateUrl:_contextPath+"login.html",controller:"LoginCtrl"}}}).state("root.register",{url:"/register",title:"Register",data:{requireLogin:!1},views:{"container@":{templateUrl:_contextPath+"register.html",controller:"UsercreateCtrl"}}}).state("root.smellbrowser",{url:"/smellbrowser",title:"Smell Browser",data:{requireLogin:!1},views:{"container@":{controller:"SmellCtrl",title:"Smell Browser",templateUrl:_contextPath+"smellbrowser.html"},"addSmellView@root.smellbrowser":{controller:"SmelladdCtrl",parent:"root.smellbrowser",title:"Create Smell",templateUrl:_contextPath+"smelldialog.html",data:{requireLogin:!0,allowedRoles:["Admin","Editor"]}}}}).state("root.smellbrowser.edit",{url:"/edit/:id",title:"Smell Edit",data:{requireLogin:!0,allowedRoles:["Admin","Editor"]},onEnter:["$stateParams","$state","$uibModal",function(a,b,c){var d=c.open({templateUrl:_contextPath+"smelldialog.html",controller:"SmellupdateCtrl",size:"lg",resolve:{smellid:function(){return a.id}}});d.result.then(function(){b.go("^",{},{reload:!0})},function(){b.go("^")})}]}).state("root.arbrowser",{url:"/arbrowser",title:"AR Browser",data:{requireLogin:!1},views:{"container@":{controller:"ArCtrl",title:"AR Browser",templateUrl:_contextPath+"arbrowser.html"}}}).state("root.addar",{url:"/addar",title:"Add AR",params:{id:null},data:{requireLogin:!0,allowedRoles:["Admin","Editor"]},views:{"container@":{controller:"AraddCtrl",title:"Add AR",templateUrl:_contextPath+"arform.html"}}}).state("root.aredit",{url:"/aredit/:id",title:"Edit AR",data:{requireLogin:!0,allowedRoles:["Admin","Editor"]},views:{"container@":{controller:"AreditCtrl",title:"Edit AR",templateUrl:_contextPath+"arform.html"}}}).state("root.modelelement",{url:"/modelelement",title:"Model Elements",data:{requireLogin:!0,allowedRoles:["Admin","Editor"]},views:{"container@":{templateUrl:_contextPath+"modelelement.html",title:"Model Elements",controller:"ModelelementCtrl"}}}).state("root.modelelement.edit",{url:"/edit/:id",title:"Edit Model Element",data:{requireLogin:!0,allowedRoles:["Admin","Editor"]},onEnter:["$stateParams","$state","$uibModal",function(a,b,c){var d=c.open({templateUrl:_contextPath+"modelelementdialog.html",controller:"ModelelementupdateCtrl",size:"lg",resolve:{id:function(){return a.id}}});d.result.then(function(){b.go("^",{},{reload:!0})},function(){b.go("^")}),a.ok=function(){d.close($scope.selected.item)},a.cancel=function(){d.dismiss("cancel")}}]}).state("root.modelelement.add",{url:"/add/:modelelementtype",title:"Add Model Element",data:{requireLogin:!0,allowedRoles:["Admin","Editor"]},onEnter:["$stateParams","$state","$uibModal",function(a,b,c){var d=c.open({templateUrl:_contextPath+"modelelementdialog.html",controller:"ModelelementaddCtrl",size:"lg",resolve:{modelelementtype:function(){return a.modelelementtype}}});d.result.then(function(){b.go("^",{},{reload:!0})},function(){b.go("^")}),a.ok=function(){d.close($scope.selected.item)},a.cancel=function(){d.dismiss("cancel")}}]}).state("root.smellgroup",{url:"/smellgroup",title:"Smell Groups",data:{requireLogin:!0,allowedRoles:["Admin","Editor"]},views:{"container@":{templateUrl:_contextPath+"smellgroup.html",title:"Smell Groups",controller:"SmellgroupCtrl"}}}).state("root.smellgroup.edit",{url:"/edit/:id",title:"Edit Smell Group",data:{requireLogin:!0,allowedRoles:["Admin","Editor"]},onEnter:["$stateParams","$state","$uibModal",function(a,b,c){var d=c.open({templateUrl:_contextPath+"smellgroupdialog.html",controller:"SmellgroupupdateCtrl",size:"lg",resolve:{id:function(){return a.id}}});d.result.then(function(){b.go("^",{},{reload:!0})},function(){b.go("^")}),a.ok=function(){d.close($scope.selected.item)},a.cancel=function(){d.dismiss("cancel")}}]}).state("root.smellgroup.add",{url:"/add/:smellgroup",title:"Add Smell Group",data:{requireLogin:!0,allowedRoles:["Admin","Editor"]},onEnter:["$stateParams","$state","$uibModal",function(a,b,c){var d=c.open({templateUrl:_contextPath+"smellgroupdialog.html",controller:"SmellgroupaddCtrl",size:"lg",resolve:{modelelementtype:function(){return a.modelelementtype}}});d.result.then(function(){b.go("^",{},{reload:!0})},function(){b.go("^")}),a.ok=function(){d.close($scope.selected.item)},a.cancel=function(){d.dismiss("cancel")}}]}).state("root.arsearch",{url:"/arsearch/:smellids",title:"AR Search",data:{requireLogin:!1},views:{"container@":{controller:"ArsearchCtrl",templateUrl:_contextPath+"arsearch.html"}}}).state("root.usersearches",{url:"/usersearches",templateUrl:_contextPath+"usersearches.html",controller:"UsersearchCtrl",title:"User Searches",data:{requireLogin:!0,allowedRoles:["Admin","Applier","Editor"]},views:{"container@":{templateUrl:_contextPath+"usersearches.html",controller:"UsersearchCtrl"}}}).state("root.singlesmell",{url:"/smell/:id",title:"Smell View",data:{requireLogin:!1},views:{"container@":{templateUrl:_contextPath+"singlesmell.html",controller:"SmellviewCtrl"}}}).state("root.singlear",{url:"/ar/:id",title:"AR View",data:{requireLogin:!1},views:{"container@":{templateUrl:_contextPath+"singlear.html",controller:"ArviewCtrl"},"discussionView@root.singlear":{templateUrl:_contextPath+"discussion.html",controller:"DiscussionCtrl"}}}).state("root.singletask",{url:"/task/:id",title:"Task View",data:{requireLogin:!1},views:{"container@":{templateUrl:_contextPath+"singletask.html",controller:"TaskviewCtrl"}}}).state("root.taskbrowser",{url:"/taskbrowser",title:"Task Browser",data:{requireLogin:!1},views:{"container@":{templateUrl:_contextPath+"taskbrowser.html",controller:"TaskCtrl"},"addTaskView@root.taskbrowser":{templateUrl:_contextPath+"taskdialog.html",controller:"TaskaddCtrl"}}}).state("root.taskbrowser.edit",{url:"/edit/:id",title:"Task Edit",data:{requireLogin:!0,allowedRoles:["Admin","Editor"]},onEnter:["$stateParams","$state","$uibModal",function(a,b,c){var d=c.open({templateUrl:_contextPath+"taskdialog.html",controller:"TaskupdateCtrl",size:"lg",resolve:{taskid:function(){return a.id}}});d.result.then(function(){b.go("^",{},{reload:!0})},function(){b.go("^")}),a.ok=function(){d.close($scope.selected.item)},a.cancel=function(){d.dismiss("cancel")}}]}).state("root.admin",{url:"/admin",title:"Admin",data:{requireLogin:!0,allowedRoles:["Admin"]},views:{"container@":{templateUrl:_contextPath+"admin.html"}}}).state("root.users",{url:"/users",title:"Users",data:{requireLogin:!0,allowedRoles:["Admin"]},views:{"container@":{templateUrl:_contextPath+"users.html"}}}).state("root.userview",{url:"/userview/:id",title:"User View",data:{requireLogin:!1},views:{"container@":{templateUrl:_contextPath+"userview.html",controller:"UserviewCtrl"}}}).state("root.exectypes",{url:"/exectypes",title:"Execution Task Types",data:{requireLogin:!0,allowedRoles:["Admin","Editor"]},views:{"container@":{templateUrl:_contextPath+"exectypes.html",controller:"ExectasktypeCtrl"}}}).state("root.about",{url:"/about",title:"About",data:{requireLogin:!1},views:{"container@":{templateUrl:_contextPath+"about.html",controller:"AboutCtrl"},"license@root.about":{templateUrl:_contextPath+"APACHE-LICENSE-2.0.txt"}}}).state("root.help",{url:"/help",title:"Help",data:{requireLogin:!1},views:{"container@":{templateUrl:_contextPath+"help.html"}}}).state("root.profile",{url:"/profile",title:"Profile",data:{requireLogin:!0,allowedRoles:["Admin","Applier","Editor"]},views:{"container@":{templateUrl:_contextPath+"profile.html",controller:"UserprofileCtrl"}}}).state("root.smellassess",{url:"/smellassess",title:"Smell Self-Assessment",data:{requireLogin:!1},views:{"container@":{templateUrl:_contextPath+"smellassess.html",controller:"SmellassessCtrl"}}})}]),!function(a,b){"object"==typeof exports?module.exports=b(a,require("angular")):"function"==typeof define&&define.amd?define(["angular"],function(c){return a.ngNotificationsBar=b(a,c)}):a.ngNotificationsBar=b(a,a.angular)}(this,function(a,b){var c=b.module("ngNotificationsBar",[]);return c.provider("notificationsConfig",function(){function a(a){g.hideDelay=a}function b(){return g.hideDelay}function c(a){g.acceptHTML=a}function d(){return g.acceptHTML}function e(a){g.autoHide=a}function f(){return g.autoHide}var g={};return{setHideDelay:a,setAutoHide:e,setAcceptHTML:c,$get:function(){return{getHideDelay:b,getAutoHide:f,getAcceptHTML:d}}}}),c.factory("notifications",["$rootScope",function(a){var b=function(b){a.$broadcast("notifications:error",b)},c=function(b){a.$broadcast("notifications:warning",b)},d=function(b){a.$broadcast("notifications:success",b)},e=function(b){a.$broadcast("notifications:info",b)},f=function(){a.$broadcast("notifications:closeAll")};return{showError:b,showWarning:c,showSuccess:d,showInfo:e,closeAll:f}}]),c.directive("notificationsBar",["notificationsConfig","$timeout",function(a,b){return{restrict:"EA",template:function(){var b=a.getAcceptHTML()||!1;return b?'					<div class="notifications-container" ng-if="notifications.length">						<div class="{{note.type}}" ng-repeat="note in notifications">							<span class="message" ng-bind-html="note.message"></span>							<span class="glyphicon glyphicon-remove close-click" ng-click="close($index)"></span>						</div>					</div>				':'					<div class="notifications-container" ng-if="notifications.length">						<div class="{{note.type}}" ng-repeat="note in notifications">							<span class="message" >{{note.message}}</span>							<span class="glyphicon glyphicon-remove close-click" ng-click="close($index)"></span>						</div>					</div>				'},link:function(c){var d=c.notifications=[],e=a.getHideDelay()||3e3,f=a.getAutoHide()||!1,g=function(a){var b=-1;d.forEach(function(c,d){c.id===a&&(b=d)}),b>=0&&d.splice(b,1)},h=function(a,c,h){var i,j=f,k=e;"object"==typeof c?(i=c.message,j="undefined"==typeof c.hide?f:!!c.hide,k=c.hideDelay||k):i=c;var l="notif_"+Math.floor(128*Math.random());if(d.push({id:l,type:h,message:i}),j)var m=b(function(){g(l),b.cancel(m)},k)};c.$on("notifications:error",function(a,b){h(a,b,"error")}),c.$on("notifications:warning",function(a,b){h(a,b,"warning")}),c.$on("notifications:success",function(a,b){h(a,b,"success")}),c.$on("notifications:info",function(a,b){h(a,b,"info")}),c.$on("notifications:closeAll",function(){d.length=0}),c.close=function(a){d.splice(a,1)}}}}]),c}),angular.module("uiApp").controller("LoginCtrl",["UserService","ReplyErrorHandler","notifications","$scope","$state","currentUser",function(a,b,c,d,e,f){d.logindata={email:"",password:"",keeploggedin:1},d.login=function(g){a.login.login(d.logindata,function(a,b,h,i){f.profile=a,c.showSuccess("Logged in"),d.logindata={email:"",password:"",keeploggedin:1},g.$setPristine(),"stay"==f.profile.startpage?e.go(e.current,{},{reload:!0}):e.go("root."+f.profile.startpage)},b)}}]),angular.module("uiApp").controller("LogoutCtrl",["UserService","ReplyErrorHandler","notifications","$scope","$state","currentUser",function(a,b,c,d,e,f){d.logout=function(){a.logout.logout({},function(a,b,g,h){c.showSuccess("Logged out"),d.logindata={email:"",password:""},f.profile=null,e.go("root.home")},b)}}]),angular.module("uiApp").controller("UserviewCtrl",["UserService","ReplyErrorHandler","$scope","$stateParams",function(a,b,c,d){c.startpages=["home","arbrowser","smellbrowser","taskbrowser","stay"],c.user,c.getUser=function(){a.id.get({id:d.id},function(a,b,d,e){c.user=a},b)},c.getUser()}]),angular.module("uiApp").controller("UserprofileCtrl",["UserService","RolesService","AvatarUploader","ReplyErrorHandler","PasswordValidator","notifications","$scope","currentUser","$state",function(a,b,c,d,e,f,g,h,i){g.startpages=["home","arbrowser","smellbrowser","taskbrowser","stay"],g.user,g.pw,g.roles=[],g.pwcheck=[],b.get({},function(a,b,c,d){g.roles=a},d),a.id.get({id:h.profile.id},function(a,b,c,d){g.user=a},d),g.updateProfile=function(){a.noid.update({},g.user,function(a,b,c,d){f.showSuccess("Profile saved successful.")},d)},g.changePassword=function(){a.pw.update({},g.pw,function(a,b,c,d){f.showSuccess("Password has been changed."),g.pw=null,g.pwUpdateForm.$setPristine()},d)},g.getTime=function(){return new Date},g.uploadAvatar=function(){c.upload(g.avatarimage).success(function(a,b,c,d){f.showSuccess("Avatar image has been uploaded."),g.avatarimage=null,i.go(i.current,{},{reload:!0})}).error(function(a,b,c,d){g.avatarimage=null,f.showError("Failed to upload avatar image: "+a)})},g.revalidate=function(a,b){g.pwcheck=e.check(a,b)}}]),angular.module("uiApp").controller("UsercreateCtrl",["UserService","RolesService","ReplyErrorHandler","PasswordValidator","notifications","$scope","$state",function(a,b,c,d,e,f,g){f.startpages=["home","arbrowser","smellbrowser","taskbrowser","stay"],f.user=[],f.user.startpage="stay",f.roles=[],f.pwcheck=[],b.get({},function(a,b,c,d){f.roles=a,f.user.role=f.roles[2]},c),f.createUser=function(){a.noid.create(f.user,function(a,b,c,d){e.showSuccess("User has been created."),g.go("root.home")},c)},f.revalidate=function(a,b){f.pwcheck=d.check(a,b)}}]),angular.module("uiApp").controller("MenuCtrl",["MenuService","ReplyErrorHandler","LastViewed","notifications","$scope",function(a,b,c,d,e){e.menuItems=[],e.lastViewedItems=c.list,a.get({},function(a,b,c,d){e.menuItems=a},b)}]),angular.module("uiApp").controller("StatsCtrl",["StatisticService","ReplyErrorHandler","notifications","$scope",function(a,b,c,d){d.stats=[],a.get({},function(a,b,c,e){d.stats=a},b)}]),angular.module("uiApp").controller("ArviewCtrl",["ArService","ReplyErrorHandler","$stateParams","$state","notifications","$scope","$filter","ConfirmModal","LastViewed",function(a,b,c,d,e,f,g,h,i){var j=g("orderBy");f.ar={},f.discussion_id,f.currentar=[],f.discussion_id=null,f.setCurrentAr=function(a){f.currentar=f.ar.versions[a],f.discussion_id=f.currentar.discussion.id},f.getType=function(a){if(a)for(var b=0;b<a.length;b++)if("Type"==a[b].property.name)return a[b].value;return""},f.loadAr=function(){a.id.get({id:c.id},function(a,b,c,d){f.ar=a,f.ar.versions=j(f.ar.versions,"created",!0),f.setCurrentAr(0);var e={name:f.ar.versions[0].name,type:"AR",id:f.ar.id};i.add(e)},b)},f.loadAr(),f.deleteAr=function(c){h.showModal({},{headerText:"Confirm",bodyText:"Are you sure you want to delete the whole AR?"}).then(function(f){a.id["delete"]({id:c},function(a,b,f,g){e.showSuccess("Ar "+c+" has been deleted."),d.go("root.arbrowser")},b)},function(){e.showInfo("Delete canceled.")})},f.deleteArVersion=function(c){h.showModal({},{headerText:"Confirm",bodyText:"Are you sure you want to delete this ArVersion?"}).then(function(d){for(var g=0,h=f.ar.versions.length;h>g;g++){var i=f.ar.versions[g];if(i.id===c){f.ar.versions.splice(g,1);break}}a.noid.update(f.ar,function(a,b,d,g){e.showSuccess("ArVersion "+c+" has been removed."),f.loadAr()},b)},function(){e.showInfo("Delete canceled.")})}}]),angular.module("uiApp").controller("DiscussionCtrl",["DiscussionService","CommentService","ReplyErrorHandler","$stateParams","notifications","$scope",function(a,b,c,d,e,f){f.newcomment,f.init=function(){f.newcomment={},f.newcomment.comment=""},f.init(),f.discussion={},f.$watch("discussion_id",function(){null!=f.discussion_id&&a.id.get({id:f.discussion_id},function(a,b,c,d){f.discussion=a},c)}),f.updateComment=function(a,d){b.noid.update(d,function(a,b,c,d){e.showSuccess("Comment has been updated.")},c)},f.addComment=function(a){f.newcomment.discussion={id:a},b.noid.create(f.newcomment,function(a,b,c,d){f.discussion.comments.unshift(a),f.init(),e.showSuccess("Comment has been added.")},c)},f.like=function(a){b.like.like({id:a.id},function(b,c,d,f){e.showSuccess("Comment has been liked."),a.likeCount++},c)}}]),angular.module("uiApp").controller("ArCtrl",["ArService","ArVersionService","CloudSmells","ReplyErrorHandler","notifications","$scope","$filter","ConfirmModal",function(ArService,ArVersionService,CloudSmells,ReplyErrorHandler,notifications,$scope,$filter,ConfirmModal){var orderBy=$filter("orderBy");$scope.arlist=[],this.formvisible=!0,$scope.words=[],$scope.cloudcallstatus='&nbsp;<i class="glyphicon glyphicon-refresh glyphicon-refresh-animate"/> Loading...',$scope.loadArs=function(){ArVersionService.noid.get({},function(a,b,c,d){$scope.arlist=a},ReplyErrorHandler)},$scope.loadArs(),this.loadCloud=function(){CloudSmells.get().success(function(data,status,headers,config){$scope.words=eval(data),$scope.cloudcallstatus=""}).error(function(a,b,c,d){$scope.cloudcallstatus="NOK",notifications.showError("Failed to load SmellCloud")})},this.loadCloud(),this.showForm=function(a){1==a?this.formvisible=!0:this.formvisible=!1},$scope.order=function(a,b){$scope.arlist=orderBy($scope.arlist,a,b)},$scope.order("name",!1),$scope.setSmellFilter=function(a){$scope.search.smells.name=a,$scope.order()},this.ar={},$scope.deleteAr=function(a){ConfirmModal.showModal({},{headerText:"Confirm",bodyText:"Are you sure you want to delete the whole AR?"}).then(function(b){ArService.id["delete"]({id:a},function(b,c,d,e){notifications.showSuccess("Delete of AR with id "+a+" and his versions succsessful."),$scope.loadArs()},ReplyErrorHandler)},function(){notifications.showInfo("Delete canceled.")})},$scope.getPDF=function(a){ArVersionService.id.pdf({id:a},function(a,b,c,d){},ReplyErrorHandler)}}]),angular.module("uiApp").controller("AreditCtrl",["ArService","ArVersionService","SmellService","TaskService","StatusService","ModelElementService","ReplyErrorHandler","notifications","$scope","$stateParams","$filter","PropModal","SmellModal","TaskModal",function(a,b,c,d,e,f,g,h,i,j,k,l,m,n){i.ar={versions:[]},i.arversion={},i.arversion.properties=[],i.arversion.smells=[],i.arversion.tasks=[],i.smells=[],i.tasks=[],i.ar.versions.push(i.arversion),i.modelelements=[],i.modelelementtypes=[],i.status=[],i.modelelementsvalues=[],i.modelelementsvalues.qas=[],i.modelelementsvalues.context=[],i.modelelementsvalues.components=[],i.modelelementsvalues.decisions=[],i.modelelementsvalues.references=[],i.getType=function(a){if(a)for(var b=0;b<a.length;b++)if("Type"===a[b].property.name)return a[b].value;return""},i.loadArVersion=function(){b.id.get({id:j.id},function(a,b,c,d){i.arversion=a,i.modelelementsvalues.qas=k("arPropFilter")(i.arversion.properties,"QASElementLink"),i.modelelementsvalues.context=k("arPropFilter")(i.arversion.properties,"ContextElementLink"),i.modelelementsvalues.components=k("arPropFilter")(i.arversion.properties,"ComponentElementLink"),i.modelelementsvalues.decisions=k("arPropFilter")(i.arversion.properties,"DecisionElementLink"),i.modelelementsvalues.references=k("arPropFilter")(i.arversion.properties,"ReferenceElementLink"),i.arversion.properties=[]},g)},i.loadArVersion(),i.addcreatedProp=function(a){switch(i.loadProps(a.type),a.type){case"QASElementLink":i.modelelementsvalues.qas.push(a.newProp);break;case"ContextElementLink":i.modelelementsvalues.context.push(a.newProp);break;case"ComponentElementLink":i.modelelementsvalues.components.push(a.newProp);break;case"DecisionElementLink":i.modelelementsvalues.decisions.push(a.newProp);break;case"ReferenceElementLink":i.modelelementsvalues.references.push(a.newProp)}},i.openPropModal=function(a){l.open(a,i.addcreatedProp,function(){})},i.addcreatedSmell=function(a){i.loadSmells(),i.arversion.smells.push(a)},i.openSmellModal=function(a){m.open(a,i.addcreatedSmell,function(){})},i.addcreatedTask=function(a){i.loadTasks(),i.arversion.tasks.push(a)},i.openTaskModal=function(a){n.open(a,i.addcreatedTask,function(){})},i.loadSmells=function(){c.noid.get({},function(a,b,c,d){i.smells=a},g)},i.loadTasks=function(){d.noid.get({},function(a,b,c,d){i.tasks=a},g)},i.loadValues=function(){e.get({},function(a,b,c,d){i.status=a},g),i.loadSmells(),i.loadTasks(),f.type.get({},function(a,b,c,d){i.modelelementtypes=a,i.loadAllProps()},g)},i.loadValues(),i.loadProps=function(a){switch(a){case"QASElementLink":f.qas.get({},function(a,b,c,d){i.modelelements.qas=a},g);break;case"ContextElementLink":f.context.get({},function(a,b,c,d){i.modelelements.context=a},g);break;case"ComponentElementLink":f.components.get({},function(a,b,c,d){i.modelelements.components=a},g);break;case"DecisionElementLink":f.decisions.get({},function(a,b,c,d){i.modelelements.decisions=a},g);break;case"ReferenceElementLink":f.references.get({},function(a,b,c,d){i.modelelements.references=a},g)}},i.loadAllProps=function(){for(var a=0;a<i.modelelementtypes.length;a++)i.loadProps(i.modelelementtypes[a])},i.mergeProperties=function(){i.arversion.properties=[].concat(i.modelelementsvalues.qas,i.modelelementsvalues.context,i.modelelementsvalues.components,i.modelelementsvalues.decisions,i.modelelementsvalues.references)},i.saveAr=function(){i.mergeProperties(),b.noid.update(i.arversion,function(a,b,c,d){h.showSuccess("ArVersion has been updated successfully.")},g)}}]),angular.module("uiApp").controller("AraddCtrl",["ArService","ArVersionService","SmellService","TaskService","ModelElementService","StatusService","ReplyErrorHandler","notifications","$scope","$stateParams","$filter","$state","PropModal","TaskModal","SmellModal",function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){i.ar={versions:[]},i.arversion={},i.arversion.properties=[],i.arversion.smells=[],i.arversion.tasks=[],i.smells=[],i.tasks=[],i.ar.versions.push(i.arversion),i.modelelements=[],i.modelelementtypes=[],i.status=[],i.modelelementsvalues=[],i.modelelementsvalues.qas=[],i.modelelementsvalues.context=[],i.modelelementsvalues.components=[],i.modelelementsvalues.decisions=[],i.modelelementsvalues.references=[],j.id&&""!=j.id&&b.id.get({id:j.id},function(a,b,c,d){i.arversion=a,i.ar.id=i.arversion.arhead.id,i.arversion.discussion={},i.modelelementsvalues.qas=k("arPropFilter")(i.arversion.properties,"QASElementLink"),i.modelelementsvalues.context=k("arPropFilter")(i.arversion.properties,"ContextElementLink"),i.modelelementsvalues.components=k("arPropFilter")(i.arversion.properties,"ComponentElementLink"),i.modelelementsvalues.decisions=k("arPropFilter")(i.arversion.properties,"DecisionElementLink"),i.modelelementsvalues.references=k("arPropFilter")(i.arversion.properties,"ReferenceElementLink"),i.arversion.properties=[],i.arversion.id=null},g),i.addcreatedProp=function(a){switch(i.loadProps(a.type),a.type){case"QASElementLink":i.modelelementsvalues.qas.push(a.newProp);break;case"ContextElementLink":i.modelelementsvalues.context.push(a.newProp);break;case"ComponentElementLink":i.modelelementsvalues.components.push(a.newProp);break;case"DecisionElementLink":i.modelelementsvalues.decisions.push(a.newProp);break;case"ReferenceElementLink":i.modelelementsvalues.references.push(a.newProp)}},i.openPropModal=function(a){m.open(a,i.addcreatedProp,function(){})},i.loadSmells=function(){c.noid.get({},function(a,b,c,d){i.smells=a},g)},i.addcreatedSmell=function(a){i.loadSmells(),i.arversion.smells.push(a)},i.openSmellModal=function(a){o.open(a,i.addcreatedSmell,function(){})},i.loadTasks=function(){d.noid.get({},function(a,b,c,d){i.tasks=a},g)},i.addcreatedTask=function(a){i.loadTasks(),i.arversion.tasks.push(a)},i.openTaskModal=function(a){n.open(a,i.addcreatedTask,function(){})},i.loadValues=function(){f.get({},function(a,b,c,d){i.status=a,i.arversion.status=i.status[0]},g),i.loadSmells(),i.loadTasks(),e.type.get({},function(a,b,c,d){i.modelelementtypes=a,i.loadAllProps()},g)},i.loadValues(),i.loadProps=function(a){switch(a){case"QASElementLink":e.qas.get({},function(a,b,c,d){i.modelelements.qas=a},g);break;case"ContextElementLink":e.context.get({},function(a,b,c,d){i.modelelements.context=a},g);break;case"ComponentElementLink":e.components.get({},function(a,b,c,d){i.modelelements.components=a},g);break;case"DecisionElementLink":e.decisions.get({},function(a,b,c,d){i.modelelements.decisions=a},g);break;case"ReferenceElementLink":e.references.get({},function(a,b,c,d){i.modelelements.references=a},g)}},i.loadAllProps=function(){for(var a=0;a<i.modelelementtypes.length;a++)i.loadProps(i.modelelementtypes[a])},i.mergeProperties=function(){i.arversion.properties=[].concat(i.modelelementsvalues.qas,i.modelelementsvalues.context,i.modelelementsvalues.components,i.modelelementsvalues.decisions,i.modelelementsvalues.references)},i.saveAr=function(){i.mergeProperties(),j.id&&""!=j.id?b.noid.create(i.arversion,function(a,b,c,d){h.showSuccess("ArVersion has been added successfully."),l.go("root.singlear",{id:a.arhead.id})},g):a.noid.create(i.ar,function(a,b,c,d){h.showSuccess("Ar has been added successfully."),l.go("root.singlear",{id:a.id})},g)},this.progMax=200,this.setProgValue=function(){this.progStacked=[];for(var a=["success","info","warning","danger"],b=0,c=Math.floor(4*Math.random()+1);c>b;b++){var d=Math.floor(4*Math.random());this.progStacked.push({value:Math.floor(30*Math.random()+1),type:a[d]})}},this.setProgValue()}]),angular.module("uiApp").controller("ModelelementCtrl",["ModelElementService","ReplyErrorHandler","ConfirmModal","notifications","$scope","$stateParams","$filter",function(a,b,c,d,e,f,g){var h=g("orderBy");e.modelelementlist=[],e.modelelementtypes=[],e.selectedtype="",e.loadModelElementTypes=function(){a.type.get({},function(a,b,c,d){e.modelelementtypes=a},b)},e.loadModelElementTypes(),e.loadModelElements=function(c){a.noid.get({},function(a,b,c,d){e.modelelementlist=a},b)},e.loadModelElements(),e.deleteElement=function(f){c.showModal({},{headerText:"Confirm",bodyText:"Are you sure you want to delete this element?"}).then(function(c){a.id["delete"]({id:f},function(a,b,c,f){d.showSuccess("Model Element Link has been deleted."),e.loadModelElements()},b)},function(){d.showInfo("Delete canceled.")})},e.order=function(a,b){e.modelelementlist=h(e.modelelementlist,a,b)},e.order("name",!1)}]),angular.module("uiApp").controller("ModelelementaddCtrl",["ModelElementService","ReplyErrorHandler","notifications","$uibModalInstance","$scope","$stateParams","modelelementtype",function(a,b,c,d,e,f,g){e.modelelement={},e.modelelement.type=g,e.saveModelElement=function(f){a.noid.create(e.modelelement,function(a,b,h,i){c.showSuccess("Model Element of type "+e.modelelement.type+" has been added."),e.modelelement={},f.$setPristine();var j=[];j.type=g,j.newProp=a,d.close(j)},b)},e.dismiss=function(a){d.dismiss("cancel")}}]),angular.module("uiApp").controller("ModelelementupdateCtrl",["ModelElementService","ReplyErrorHandler","notifications","$uibModalInstance","$scope","$stateParams",function(a,b,c,d,e,f){e.modelelement={},e.loadModelElement=function(){a.id.get({id:f.id},function(a,b,c,d){e.modelelement=a},b)},e.loadModelElement(),e.saveModelElement=function(f){a.noid.update(e.modelelement,function(a,b,g,h){c.showSuccess("Model Element of type "+e.modelelement.type+" has been updated."),e.modelelement={},f.$setPristine(),d.close()},b)},e.dismiss=function(a){d.dismiss("cancel")}}]),angular.module("uiApp").controller("SmellgroupCtrl",["SmellGroupService","ReplyErrorHandler","ConfirmModal","notifications","$scope","$stateParams","$filter",function(a,b,c,d,e,f,g){var h=g("orderBy");e.smellgrouplist=[],e.loadSmellGroups=function(){a.noid.get({},function(a,b,c,d){e.smellgrouplist=a},b)},e.loadSmellGroups(),e.deleteSmellGroup=function(f){c.showModal({},{headerText:"Confirm",bodyText:"Are you sure you want to delete this Smell Group?"}).then(function(c){a.id["delete"]({id:f},function(a,b,c,f){d.showSuccess("Smell Group has been deleted."),e.loadSmellGroups()},b)},function(){d.showInfo("Delete canceled.")})},e.order=function(a,b){e.smellgrouplist=h(e.smellgrouplist,a,b)},e.order("name",!1)}]),angular.module("uiApp").controller("SmellgroupaddCtrl",["SmellGroupService","ReplyErrorHandler","notifications","$uibModalInstance","$scope","$stateParams","modelelementtype",function(a,b,c,d,e,f,g){e.smellgroup={},e.saveSmellGroup=function(f){a.noid.create(e.smellgroup,function(a,b,g,h){c.showSuccess("Smell Group has been added."),e.smellgroup={},f.$setPristine(),d.close()},b)},e.dismiss=function(a){d.dismiss("cancel")}}]),angular.module("uiApp").controller("SmellgroupupdateCtrl",["SmellGroupService","ReplyErrorHandler","notifications","$uibModalInstance","$scope","$stateParams",function(a,b,c,d,e,f){e.smellgroup={},e.loadSmellGroup=function(){a.id.get({id:f.id},function(a,b,c,d){e.smellgroup=a},b)},e.loadSmellGroup(),e.saveSmellGroup=function(f){a.noid.update(e.smellgroup,function(a,b,g,h){c.showSuccess("Smell Group has been updated."),e.smellgroup={},f.$setPristine(),d.close()},b)},e.dismiss=function(a){d.dismiss("cancel")}}]),angular.module("uiApp").controller("ArsearchCtrl",["ArService","ArVersionService","UserSearchService","ReplyErrorHandler","ConfirmModal","notifications","$scope","$stateParams","$filter","$state",function(a,b,c,d,e,f,g,h,i,j){var k=i("orderBy");g.arlist=[],g.arsearch={},g.loadArs=function(){b.search.get(JSON.parse(h.smellids),function(a,b,c,d){g.arlist=a},d)},g.loadArs(),g.order=function(a,b){g.arlist=k(g.arlist,a,b)},g.order("name",!1),g.saveSearch=function(a){g.arsearch.search=h.smellids,c.noid.create(g.arsearch,function(b,c,d,e){f.showSuccess("Search has been added to your profile."),g.arsearch={},a.$setPristine(),j.go("root.usersearches");
},d)},g.deleteAr=function(b){e.showModal({},{headerText:"Confirm",bodyText:"Are you sure you want to delete the whole AR?"}).then(function(c){a.id["delete"]({id:b},function(a,c,d,e){f.showSuccess("Delete of AR with id "+b+" and his versions succsessful."),g.loadArs()},d)},function(){f.showInfo("Delete canceled.")})}}]),angular.module("uiApp").controller("UsersearchCtrl",["UserSearchService","ReplyErrorHandler","ConfirmModal","notifications","$scope",function(a,b,c,d,e,f){e.searchlist=[],e.loadSearches=function(){a.noid.get({},function(a,b,c,d){e.searchlist=a},b)},e.loadSearches(),e.deleteSearch=function(f){c.showModal({},{headerText:"Confirm",bodyText:"Are you sure you want to delete this search?"}).then(function(c){a.id["delete"]({id:f},function(a,b,c,f){d.showSuccess("User search has been deleted."),e.loadSearches()},b)},function(){d.showInfo("Delete canceled.")})}}]),angular.module("uiApp").controller("SmellassessCtrl",["ArVersionService","SmellGroupService","ReplyErrorHandler","notifications","$scope","$state",function(a,b,c,d,e,f){e.counter,e.groups=[],e.groupToggle=[],e.groupAllCheck=[],e.arlist=[],b.assess.get({},function(a,b,c,d){e.groups=a},c),e.selectedSmells={smellids:[]},e.groupAllshow=!1,e.groupToggleAll=function(){e.groupAllshow=!e.groupAllshow;for(var a=0;a<e.groupToggle.length;a++)e.groupToggle[a]=e.groupAllshow},e.toggleGroupSelect=function(a){e.groupAllCheck[a]=!e.groupAllCheck[a];for(var b=0;b<e.groups[a].smells.length;b++){var c=e.groups[a].smells[b],d=e.selectedSmells.smellids.indexOf(c.id);e.groupAllCheck[a]?-1==d&&e.selectedSmells.smellids.push(c.id):d>-1&&e.selectedSmells.smellids.splice(d,1)}e.getSmellCount()},e.loadArs=function(){a.search.get(e.selectedSmells,function(a,b,c,d){e.arlist=a},c)},e.getSmellCount=function(){0!=e.selectedSmells.smellids.length?(a.count(e.selectedSmells).success(function(a,b,c,d){e.counter=a}).error(function(a,b,c,e){d.showError("Failed to get Ar count.")}),e.loadArs()):(e.counter=0,e.arlist=[])},e.resetForm=function(){e.selectedSmells={smellids:[]},e.groupAllCheck=[],e.counter=0},e.resetForm(),e.executeSearch=function(){f.go("root.arsearch",{smellids:JSON.stringify(e.selectedSmells)})},e.toggleSelection=function(a){var b=e.selectedSmells.smellids.indexOf(a);b>-1?e.selectedSmells.smellids.splice(b,1):e.selectedSmells.smellids.push(a),e.getSmellCount()}}]),angular.module("uiApp").controller("SmelladdCtrl",["SmellService","SmellGroupService","StatusService","ReplyErrorHandler","notifications","$scope","sharedSmell",function(a,b,c,d,e,f,g){f.smell=g.smell,f.questionToAdd,f.status=[],f.loadStatus=function(){c.get({},function(a,b,c,d){f.status=a,f.smell.status=f.status[0]},d)},f.loadStatus(),f.groups=[],f.loadGroups=function(){b.noid.get({},function(a,b,c,d){f.groups=a,f.smell.group=f.groups[0]},d)},f.loadGroups(),f.initSmell=function(){g.clear(),f.smell.questions=[],f.smell.tecdebtidx="mm",f.questionToAdd=""},f.initSmell(),f.saveSmell=function(b){a.noid.create(f.smell,function(a,c,d,g){f.loadSmells&&f.loadSmells(),e.showSuccess("Smell has been added."),f.initSmell(),b.$setPristine()},d)},f.cancel=function(a){f.initSmell(),f.smell.status=f.status[0],f.smell.group=f.groups[0],a.$setPristine()},f.addQuestion=function(){f.smell.questions.push({question:f.questionToAdd}),f.questionToAdd=""},f.removeQuestion=function(a){f.smell.questions.splice(a,1)}}]),angular.module("uiApp").controller("SmellmodaladdCtrl",["$controller","$scope","$uibModalInstance","SmellService","ReplyErrorHandler","notifications",function(a,b,c,d,e,f){a("SmelladdCtrl",{$scope:b}),b.saveSmell=function(a){d.noid.create(b.smell,function(d,e,g,h){b.loadSmells&&b.loadSmells(),f.showSuccess("Smell has been added."),b.initSmell(),a.$setPristine(),c&&c.close(d)},e)},b.cancel=function(a){b.initSmell(),b.smell.status=b.status[0],b.smell.group=b.groups[0],a.$setPristine(),c&&c.dismiss("cancel")}}]),angular.module("uiApp").controller("SmellCtrl",["SmellService","SmellGroupService","ReplyErrorHandler","StatusService","ConfirmModal","notifications","$scope","$filter","sharedSmell",function(a,b,c,d,e,f,g,h,i){var j=h("orderBy");g.smelllist=[],g.formvisible=!1,g.smell=i.smell,g.status=[],g.loadStatus=function(){d.get({},function(a,b,c,d){g.status=a},c)},g.loadStatus(),g.groups=[],g.loadGroups=function(){b.noid.get({},function(a,b,c,d){g.groups=a},c)},g.loadGroups(),g.showForm=function(a){1==a?g.formvisible=!0:g.formvisible=!1},g.loadSmells=function(){a.noid.get({},function(a,b,c,d){g.smelllist=a},c)},g.loadSmells(),g.reload=function(){g.loadSmells()},g.deleteSmell=function(b){e.showModal({},{headerText:"Confirm",bodyText:"Are you sure you want to delete this Smell?"}).then(function(d){a.id["delete"]({id:b},function(a,b,c,d){g.loadSmells(),f.showSuccess("Smell has been deleted.")},c)},function(){f.showInfo("Delete canceled.")})},g.order=function(a,b){g.smelllist=j(g.smelllist,a,b)},g.order("name",!1)}]),angular.module("uiApp").controller("SmellviewCtrl",["SmellService","ArVersionService","ConfirmModal","ReplyErrorHandler","notifications","$stateParams","$state","$scope","LastViewed",function(a,b,c,d,e,f,g,h,i){h.smell={},h.smellids={smellids:[]},h.getSmell=function(b){a.id.get({id:b},function(a,b,c,d){h.smell=a;var e={name:h.smell.name,type:"Smell",id:h.smell.id};i.add(e)},d)},h.getSmell(f.id),h.deleteSmell=function(b){c.showModal({},{headerText:"Confirm",bodyText:"Are you sure you want to delete this Smell?"}).then(function(c){a.id["delete"]({id:b},function(a,b,c,d){g.go("root.smellbrowser"),e.showSuccess("Smell has been deleted.")},d)},function(){e.showInfo("Delete canceled.")})},h.loadArs=function(){h.smellids.smellids.push(f.id),b.search.get(h.smellids,function(a,b,c,d){h.arlist=a},d)},h.loadArs()}]),angular.module("uiApp").controller("SmellupdateCtrl",["SmellService","SmellGroupService","StatusService","ReplyErrorHandler","notifications","$uibModalInstance","$scope","$stateParams","smellid",function(a,b,c,d,e,f,g,h,i){g.status=[],g.loadStatus=function(){c.get({},function(a,b,c,d){g.status=a},d)},g.loadStatus(),g.smell,g.initSmell=function(){g.smell={},g.smell.questions=[],g.questionToAdd=""},g.initSmell(),g.groups=[],g.loadGroups=function(){b.noid.get({},function(a,b,c,d){g.groups=a},d)},g.loadGroups(),g.getSmell=function(b){a.id.get({id:b},function(a,b,c,d){g.smell=a},d)},g.getSmell(h.id),g.saveSmell=function(){a.noid.update(g.smell,function(a,b,c,d){f.close(),e.showSuccess("Smell has been updated."),g.smell={}},d)},g.reload=function(){g.loadSmells()},g.cancel=function(a){g.initSmell(),a.$setPristine(),f.dismiss("cancel")},g.addQuestion=function(){g.smell.questions.push({question:g.questionToAdd}),g.questionToAdd=""},g.removeQuestion=function(a){g.smell.questions.splice(a,1)}}]),angular.module("uiApp").controller("TaskCtrl",["TaskService","ExecTaskTypeService","TaskPropertyService","ReplyErrorHandler","ConfirmModal","notifications","$scope","$filter","$sce","sharedTask",function(a,b,c,d,e,f,g,h,i,j){var k=h("orderBy");g.tasklist=[],g.task=j.task,g.formvisible=!1,g.showForm=function(a){1==a?g.formvisible=!0:g.formvisible=!1},g.getType=function(a){if(a)for(var b=0;b<a.length;b++)if("Type"==a[b].property.name)return a[b].value;return""},g.loadTasks=function(){a.noid.get({},function(a,b,c,d){g.tasklist=a},d)},g.loadTasks(),g.deleteTask=function(b){e.showModal({},{headerText:"Confirm",bodyText:"Are you sure you want to delete this Task?"}).then(function(c){a.id["delete"]({id:b},function(a,b,c,d){g.loadTasks(),f.showSuccess("Task has been deleted.")},d)},function(){f.showInfo("Delete canceled.")})},g.order=function(a,b){g.tasklist=k(g.tasklist,a,b)},g.order("name",!1)}]),angular.module("uiApp").controller("TaskaddCtrl",["TaskService","ExecTaskTypeService","TaskPropertyService","ReplyErrorHandler","notifications","$scope","$filter","$sce","sharedTask",function(a,b,c,d,e,f,g,h,i){f.exectasktypes="",f.taskproperties=[],f.task=i.task,f.propertyToAdd={};var j="",k=function(a,b){a.forEach(function(a){var c='<option value="'+a.name+'">'+b+a.name+"</option>";j+=c,k(a.subTasks,b+"&#8212;")})};f.loadExecTaskTypes=function(){b.noid.get({},function(a,b,c,d){j='<select class="form-control" ng-model="propertyToAdd.value">';var e=a[0].subTasks;k(e,""),j+="</select>",f.exectasktypes=h.trustAsHtml(j)},d)},f.loadExecTaskTypes(),f.loadTaskProperties=function(){c.noid.get({},function(a,b,c,d){f.taskproperties=a,f.propertyToAdd.property=f.taskproperties[0]},d)},f.loadTaskProperties(),f.initTask=function(){i.clear(),f.task.properties=[],f.propertyToAdd={property:{}}},f.initTask(),f.cancel=function(a){f.initTask(),a.$setPristine(),f.propertyToAdd.property=f.taskproperties[0]},f.saveTask=function(b){a.noid.create(f.task,function(a,c,d,g){f.loadTasks(),e.showSuccess("Task has been added."),f.initTask(),b.$setPristine()},d)},f.addProperty=function(){f.task.properties.push(f.propertyToAdd),f.propertyToAdd={property:{}}},f.removeProperty=function(a){f.task.properties.splice(a,1)}}]),angular.module("uiApp").controller("TaskmodaladdCtrl",["$controller","$scope","$uibModalInstance","TaskService","ReplyErrorHandler","notifications",function(a,b,c,d,e,f){a("TaskaddCtrl",{$scope:b}),b.saveTask=function(a){d.noid.create(b.task,function(d,e,g,h){f.showSuccess("Task has been added."),b.initTask(),a.$setPristine(),c.close(d)},e)},b.cancel=function(a){b.initTask(),a.$setPristine(),b.propertyToAdd.property=b.taskproperties[0],c.dismiss("cancel")}}]),angular.module("uiApp").controller("TaskviewCtrl",["TaskService","ReplyErrorHandler","ConfirmModal","notifications","$scope","$stateParams","$state","LastViewed",function(a,b,c,d,e,f,g,h){e.task={},e.loadTask=function(){a.id.get({id:f.id},function(a,b,c,d){e.task=a;var f={name:e.task.name,type:"Task",id:e.task.id};h.add(f)},b)},e.loadTask(),e.deleteTask=function(e){c.showModal({},{headerText:"Confirm",bodyText:"Are you sure you want to delete this Task?"}).then(function(c){a.id["delete"]({id:e},function(a,b,c,e){g.go("root.taskbrowser"),d.showSuccess("Task has been deleted.")},b)},function(){d.showInfo("Delete canceled.")})}}]),angular.module("uiApp").controller("TaskupdateCtrl",["TaskService","ExecTaskTypeService","TaskPropertyService","ReplyErrorHandler","notifications","$uibModalInstance","$scope","$stateParams","taskid","$sce",function(a,b,c,d,e,f,g,h,i,j){g.status=[],g.exectasktypes="",g.taskproperties=[],g.propertyToAdd={},g.task={};var k="",l=function(a,b){a.forEach(function(a){var c='<option value="'+a.name+'">'+b+a.name+"</option>";k+=c,l(a.subTasks,b+"&#8212;")})};g.loadExecTaskTypes=function(){b.noid.get({},function(a,b,c,d){k='<select class="form-control" ng-model="propertyToAdd.value">';var e=a[0].subTasks;l(e,""),k+="</select>",g.exectasktypes=j.trustAsHtml(k)},d)},g.loadExecTaskTypes(),g.loadTaskProperties=function(){c.noid.get({},function(a,b,c,d){g.taskproperties=a,g.propertyToAdd.property=g.taskproperties[0]},d)},g.loadTaskProperties(),g.getTask=function(b){a.id.get({id:b},function(a,b,c,d){g.task=a},d)},g.getTask(h.id),g.initTask=function(){g.task={},g.task.properties=[],g.propertyToAdd={}},g.cancel=function(a){g.initTask(),a.$setPristine(),g.propertyToAdd.property=g.taskproperties[0],f.dismiss("cancel")},g.saveTask=function(){a.noid.update(g.task,function(a,b,c,d){f.close(),e.showSuccess("Task has been updated."),g.task={}},d)},g.addProperty=function(){g.task.properties.push(g.propertyToAdd),g.propertyToAdd={}},g.removeProperty=function(a){g.task.properties.splice(a,1)}}]),angular.module("uiApp").controller("ExectasktypeCtrl",["ExecTaskTypeService","ReplyErrorHandler","notifications","$scope",function(a,b,c,d){d.exectypes=[],this.emptyexectype=[],d.loadExecTaskTypes=function(){a.noid.get({},function(a,b,c,e){d.exectypes=a},b)},d.loadExecTaskTypes(),a.empty.get({},function(a,b,c,e){d.emptyexectype=a},b),d["delete"]=function(a){a.subTasks=[]},d.hasChildren=function(a){return a.subTasks.length>0},d.add=function(a){var b=a.subTasks.length+1;a.name+"-"+b;a.subTasks.push(angular.copy(this.emptyexectype))},d.save=function(){a.noid.update(d.exectypes,function(a,b,e,f){d.emptyexectype=a,c.showSuccess("Exec Task Types have been saved.")},b)}}]),angular.module("uiApp").controller("FooterCtrl",["$scope",function(a){a.date=new Date}]),angular.module("uiApp").controller("AboutCtrl",["$scope",function(a){a.date=new Date}]),angular.module("uiApp").factory("isAllowed",["currentUser",function(a){return{check:function(b){return null!=a.profile&&!(-1==b.indexOf(a.profile.role.name))}}}]),angular.module("uiApp").factory("isLoggedin",["currentUser",function(a){return{check:function(){return!(null==a.profile)}}}]),angular.module("uiApp").factory("sharedSmell",[function(){var a={smell:{}};return a.clear=function(){angular.copy({},this.smell)},a}]),angular.module("uiApp").factory("sharedTask",[function(){var a={task:{}};return a.clear=function(){angular.copy({},this.task)},a}]),angular.module("uiApp").factory("LastViewed",["$filter","$cookieStore",function(a,b){var c=5,d={list:[]},e=b.get("art_lastviewed_items",this.list);return e&&(d.list=e),d.add=function(a){for(var d=-1,e=0;e<this.list.length&&-1==d;e++)this.list[e].type==a.type&&this.list[e].id==a.id&&(d=e);-1!=d&&this.list.splice(d,1),this.list.unshift(a),this.list.length>c&&this.list.splice(this.list.length-1),b.put("art_lastviewed_items",this.list)},d}]),angular.module("uiApp").factory("PasswordValidator",[function(){return{check:function(a){return{valid:a&&/^(?=.*[A-Za-z])(?=.*[0-9]).{8,20}$/.test(a),constraints:[{name:"A-Za-z",valid:a&&/[A-Za-z]/.test(a)?!0:!1},{name:"0-9",valid:a&&/[0-9]/.test(a)?!0:!1},{name:"Length(8-20)",valid:a&&/.{8,20}/.test(a)?!0:!1}]}}}}]),angular.module("uiApp").factory("PropModal",["$uibModal","notifications",function(a,b){return{open:function(b,c,d){var e=b,f=a.open({templateUrl:_contextPath+"modelelementdialog.html",controller:"ModelelementaddCtrl",size:"lg",backdrop:"static",resolve:{modelelementtype:function(){return e}}});f.result.then(function(a){c(a)},d)}}}]),angular.module("uiApp").factory("SmellModal",["$uibModal","notifications",function(a,b){return{open:function(b,c,d){var e=b,f=a.open({templateUrl:_contextPath+"smelldialog.html",controller:"SmellmodaladdCtrl",size:"lg",backdrop:"static",resolve:{modelelementtype:function(){return e}}});f.result.then(function(a){c(a)},d)}}}]),angular.module("uiApp").factory("TaskModal",["$uibModal","notifications",function(a,b){return{open:function(b,c,d){var e=b,f=a.open({templateUrl:_contextPath+"taskdialog.html",controller:"TaskmodaladdCtrl",backdrop:"static",size:"lg",resolve:{modelelementtype:function(){return e}}});f.result.then(function(a){c(a)},d)}}}]),angular.module("uiApp").factory("ConfirmModal",["$uibModal",function(a){var b={backdrop:!0,keyboard:!0,modalFade:!0,templateUrl:_contextPath+"confirmdialog.html"},c={closeButtonText:"Cancel",actionButtonText:"Yes",headerText:"Proceed?",bodyText:"Perform this action?"};return{showModal:function(a,b){return a||(a={}),a.backdrop="static",this.show(a,b)},show:function(d,e){var f={},g={};return angular.extend(f,b,d),angular.extend(g,c,e),f.controller||(f.controller=function(a,b){a.modalOptions=g,a.modalOptions.ok=function(a){b.close(a)},a.modalOptions.close=function(a){b.dismiss("cancel")}}),a.open(f).result}}}]),angular.module("uiApp").factory("ReplyErrorHandler",["currentUser","notifications","$log","$state",function(a,b,c,d){return function(c){401===c.status?"Session timeout"===c.data?(delete a.profile,b.showError("Session timeout, please relogin")):b.showError(c.data+" ["+c.status+"] to "+c.config.method+" "+c.config.url):400===c.status?b.showError(c.data):404===c.status?(d.go("root.404"),b.showError("Object not found, ["+c.status+"], "+c.config.url)):409===c.status?b.showInfo(c.data):422===c.status?b.showError(c.data):500===c.status?b.showError(c.data+", Technical error ["+c.status+"], failed to "+c.config.method+" "+c.config.url):b.showError(c.data+", Unknown error ["+c.status+"], failed to "+c.config.method+" "+c.config.url)}}]),angular.module("uiApp").factory("ArService",["$resource",function(a){return{noid:a(_contextPath+"ar",{},{get:{method:"GET",isArray:!0},update:{method:"PUT"},create:{method:"POST"}}),id:a(_contextPath+"ar/:id",{},{get:{method:"GET"},"delete":{method:"DELETE",params:{id:"@id"}}})}}]),angular.module("uiApp").factory("ArVersionService",["$resource","$http",function(a,b){return{noid:a(_contextPath+"arversion",{},{get:{method:"GET",isArray:!0},update:{method:"PUT"},create:{method:"POST"}}),id:a(_contextPath+"arversion/:id",{},{get:{method:"GET"},"delete":{method:"DELETE",params:{id:"@id"}}}),search:a(_contextPath+"arsearch",{},{get:{method:"POST",isArray:!0}}),count:function(a){return b.post(_contextPath+"arsearchcount",a,{transformResponse:[]})}}}]),angular.module("uiApp").factory("ModelElementService",["$resource",function(a){return{type:a(_contextPath+"modelelement/type",{},{get:{method:"GET",isArray:!0}}),qas:a(_contextPath+"modelelement/qas",{},{get:{method:"GET",isArray:!0}}),components:a(_contextPath+"modelelement/components",{},{get:{method:"GET",isArray:!0}}),context:a(_contextPath+"modelelement/context",{},{get:{method:"GET",isArray:!0}}),decisions:a(_contextPath+"modelelement/decisions",{},{get:{method:"GET",isArray:!0}}),references:a(_contextPath+"modelelement/references",{},{get:{method:"GET",isArray:!0}}),noid:a(_contextPath+"modelelement",{},{get:{method:"GET",isArray:!0},update:{method:"PUT"},create:{method:"POST"}}),id:a(_contextPath+"modelelement/:id",{},{get:{method:"GET"},"delete":{method:"DELETE",params:{id:"@id"}}})}}]),angular.module("uiApp").factory("SmellGroupService",["$resource",function(a){return{noid:a(_contextPath+"smellgroup",{},{get:{method:"GET",isArray:!0},update:{method:"PUT"},create:{method:"POST"}}),id:a(_contextPath+"smellgroup/:id",{},{get:{method:"GET"},"delete":{method:"DELETE",params:{id:"@id"}}}),assess:a(_contextPath+"smellassessgroup",{},{get:{method:"GET",isArray:!0}})}}]),angular.module("uiApp").factory("UserSearchService",["$resource",function(a){return{noid:a(_contextPath+"usersearch",{},{get:{method:"GET",isArray:!0},update:{method:"PUT"},create:{method:"POST"}}),id:a(_contextPath+"usersearch/:id",{},{get:{method:"GET"},"delete":{method:"DELETE",params:{id:"@id"}}})}}]),angular.module("uiApp").factory("CloudSmells",["$http",function(a){return{get:function(){return a({method:"GET",url:_contextPath+"smell/forcloud",transformResponse:[]})}}}]),angular.module("uiApp").factory("FileUploader",["$http",function(a){return{upload:function(b,c){var d=new FormData;return d.append("file",b),a.post(c,d,{transformRequest:angular.identity,headers:{"Content-Type":void 0}})}}}]),angular.module("uiApp").factory("AvatarUploader",["FileUploader","$resource",function(a,b){return{upload:function(b){return a.upload(b,_contextPath+"avatar")}}}]),angular.module("uiApp").factory("SmellService",["$resource",function(a){return{noid:a(_contextPath+"smell",{},{get:{method:"GET",isArray:!0},update:{method:"PUT"},create:{method:"POST"}}),id:a(_contextPath+"smell/:id",{},{get:{method:"GET"},"delete":{method:"DELETE",params:{id:"@id"}}})}}]),angular.module("uiApp").factory("PropertyService",["$resource",function(a){return a(_contextPath+"property/categorie/:cat",{},{get:{method:"GET",isArray:!0}})}]),angular.module("uiApp").factory("MenuService",["$resource",function(a){return a(_contextPath+"menu",{},{get:{method:"GET",isArray:!0}})}]),angular.module("uiApp").factory("DiscussionService",["$resource",function(a){return{noid:a(_contextPath+"discussion",{},{get:{method:"GET",isArray:!0},update:{method:"PUT"},create:{method:"POST"}}),id:a(_contextPath+"discussion/:id",{},{get:{method:"GET"},"delete":{method:"DELETE",params:{id:"@id"}}})}}]),angular.module("uiApp").factory("CommentService",["$resource",function(a){return{noid:a(_contextPath+"comment",{},{get:{method:"GET",isArray:!0},update:{method:"PUT"},create:{method:"POST"}}),id:a(_contextPath+"comment/:id",{},{get:{method:"GET"},"delete":{method:"DELETE",params:{id:"@id"}}}),like:a(_contextPath+"like/:id",{},{like:{method:"PUT",params:{id:"@id"}}})}}]),angular.module("uiApp").factory("UserService",["$resource",function(a){return{noid:a(_contextPath+"user",{},{get:{method:"GET",isArray:!0},update:{method:"PUT"},create:{method:"POST"}}),id:a(_contextPath+"user/:id",{},{get:{method:"GET"},"delete":{method:"DELETE",params:{id:"@id"}}}),pw:a(_contextPath+"changepw",{},{update:{method:"PUT"}}),login:a(_contextPath+"login",{},{login:{method:"PUT"}}),logout:a(_contextPath+"logout",{},{logout:{method:"GET"}})}}]),angular.module("uiApp").factory("RolesService",["$resource",function(a){return a(_contextPath+"userroles",{},{get:{method:"GET",isArray:!0}})}]),angular.module("uiApp").factory("StatusService",["$resource",function(a){return a(_contextPath+"status",{},{get:{method:"GET",isArray:!0}})}]),angular.module("uiApp").factory("StatisticService",["$resource",function(a){return a(_contextPath+"stats",{},{get:{method:"GET",isArray:!0}})}]),angular.module("uiApp").factory("ExecTaskTypeService",["$resource",function(a){return{noid:a(_contextPath+"exectasktype",{},{get:{method:"GET",isArray:!0},update:{method:"PUT"},create:{method:"POST"}}),id:a(_contextPath+"exectasktype/:id",{},{get:{method:"GET"},"delete":{method:"DELETE",params:{id:"@id"}}}),empty:a(_contextPath+"exectasktype/empty",{},{get:{method:"GET"}})}}]),angular.module("uiApp").factory("TaskService",["$resource",function(a){return{noid:a(_contextPath+"task",{},{get:{method:"GET",isArray:!0},update:{method:"PUT"},create:{method:"POST"}}),id:a(_contextPath+"task/:id",{},{get:{method:"GET"},"delete":{method:"DELETE",params:{id:"@id"}}})}}]),angular.module("uiApp").factory("TaskPropertyService",["$resource",function(a){return{noid:a(_contextPath+"taskproperty",{},{get:{method:"GET",isArray:!0},update:{method:"PUT"},create:{method:"POST"}}),id:a(_contextPath+"taskproperty/:id",{},{get:{method:"GET"},"delete":{method:"DELETE",params:{id:"@id"}}})}}]),angular.module("uiApp").filter("limitHtml",function(){return function(a,b){if(a){var c=String(a).replace(/<[^>]+>/gm,"");c.length;return c.length>b?c.substr(0,b-1)+"...":c}return""}}),angular.module("uiApp").filter("limit",function(){return function(a,b){if(a){a.length;return a.length>b?a.substr(0,b-1)+"...":a}return""}}),angular.module("uiApp").filter("toSafeHtml",["$sce",function(a){return function(b){return b?a.trustAsHtml(b):""}}]),angular.module("uiApp").filter("breakFilter",function(){return function(a){return"undefined"!=typeof a&&null!=a&&""!==a?a.replace(/\n/g,"<br />"):void 0}}),angular.module("uiApp").filter("arPropFilter",function(){return function(a,b){var c=[];if(angular.isArray(a))for(var d=0;d<a.length;d++)a[d].type==b&&c.push(a[d]);return c}}),angular.module("uiApp").filter("propsFilter",function(){return function(a,b){var c=[];return angular.isArray(a)?a.forEach(function(a){for(var d=!1,e=Object.keys(b),f=0;f<e.length;f++){var g=e[f],h=b[g].toLowerCase();if(a[g]&&-1!==a[g].toString().toLowerCase().indexOf(h)){d=!0;break}}d&&c.push(a)}):c=a,c}}),angular.module("uiApp").directive("compile",["$compile","$timeout",function(a,b){return{restrict:"A",link:function(c,d,e){b(function(){a(d.contents())(c)},100)}}}]),angular.module("uiApp").directive("hilighter",["$timeout",function(a){return{restrict:"A",scope:{model:"=hilighter"},link:function(b,c){b.$watch("model",function(b,d){b!==d&&(c.addClass("label-success"),c.removeClass("label-default"),a(function(){c.removeClass("label-success"),c.addClass("label-default")},1e3))})}}}]),angular.module("uiApp").directive("commentArea",function(){return{restrict:"EA",scope:{datasource:"=",add:"&"},controller:["$scope",function(a){a.addCustomer=function(){var b="New Customer Added by Directive";a.add()(b)}}],template:'<button ng-click="addCustomer()">Change Data</button><ul><li ng-repeat="cust in customers">{{ cust.name }}</li></ul>'}}),angular.module("uiApp").directive("fileModel",["$parse",function(a){return{restrict:"A",link:function(b,c,d){var e=a(d.fileModel),f=e.assign;c.bind("change",function(){b.$apply(function(){f(b,c[0].files[0])})})}}}]);